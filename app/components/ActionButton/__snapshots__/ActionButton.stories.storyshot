// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots ActionButton color 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "minHeight": 48,
        },
      },
      "overrides": Object {
        "MuiAvatar": Object {
          "root": Object {
            "height": 32,
            "width": 32,
          },
        },
        "MuiButton": Object {
          "contained": Object {
            "&:active": Object {
              "boxShadow": "none",
            },
            "&:disabled": Object {
              "backgroundColor": "rgba(255, 255, 255, 0.3)",
              "color": "rgba(0, 0, 0, 0.4)",
            },
          },
          "label": Object {
            "textTransform": "initial",
          },
        },
        "MuiDivider": Object {
          "root": Object {
            "backgroundColor": "#404854",
          },
        },
        "MuiDrawer": Object {
          "paper": Object {
            "backgroundColor": "#18202c",
          },
        },
        "MuiIconButton": Object {
          "root": Object {},
        },
        "MuiListItemIcon": Object {
          "root": Object {
            "& svg": Object {
              "fontSize": 20,
            },
            "color": "inherit",
            "marginRight": 0,
          },
        },
        "MuiOutlinedInput": Object {
          "root": Object {
            "& $notchedOutline": Object {
              "borderColor": "#707070",
            },
            "&$focused $notchedOutline": Object {
              "borderColor": "#707070",
            },
            "&:hover:not($disabled):not($focused):not($error) $notchedOutline": Object {
              "@media (hover: none)": Object {
                "borderColor": "#707070",
              },
              "borderColor": "#777777",
            },
            "borderWidth": 1,
            "position": "relative",
          },
        },
        "MuiSkeleton": Object {
          "root": Object {
            "backgroundColor": "rgba(255, 255, 255, 0.1)",
          },
        },
        "MuiTab": Object {
          "root": Object {
            "fontWeight": 400,
            "margin": "0 16px",
            "minWidth": 0,
            "textTransform": "initial",
          },
        },
        "MuiTabs": Object {
          "indicator": Object {
            "borderTopLeftRadius": 3,
            "borderTopRightRadius": 3,
            "height": 3,
          },
          "root": Object {},
        },
        "MuiTooltip": Object {
          "tooltip": Object {
            "backgroundColor": "rgba(0, 0, 0, 0.9)",
            "borderRadius": 4,
          },
          "tooltipPlacementBottom": Object {
            "margin": "3px 0px 0px 0px !important",
          },
        },
      },
      "palette": Object {
        "action": Object {
          "active": "rgba(0, 0, 0, 0.54)",
          "blue": Object {
            "dark": "#0038bb",
            "light": "#6c8eff",
            "main": "#1A61EF",
          },
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "green": Object {
            "dark": "#1e962d",
            "light": "#90fc8a",
            "main": "#5BC85B",
          },
          "hover": "rgba(0, 0, 0, 0.08)",
          "hoverOpacity": 0.08,
          "selected": "rgba(0, 0, 0, 0.14)",
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fafafa",
          "paper": "#525252",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "rgb(172, 68, 68)",
          "light": "rgb(247, 129, 129)",
          "main": "#F66262",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "primary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#CBCBCB",
          "light": "#63ccff",
          "main": "#16BEFD",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "rgb(63, 140, 63)",
          "light": "rgb(123, 211, 123)",
          "main": "#5BC85B",
        },
        "success": Object {
          "main": "#5BC85B",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#FFFFFF",
          "secondary": "#CBCBCB",
        },
        "tonalOffset": 0.2,
        "type": "light",
      },
      "props": Object {
        "MuiTab": Object {
          "disableRipple": true,
        },
      },
      "shadows": Array [
        "none",
        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 8,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "color": "#CBCBCB",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
          "userSelect": "none",
        },
        "body2": Object {
          "color": "#CBCBCB",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 12,
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
          "userSelect": "none",
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "color": "#fff",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 28,
          "fontWeight": 500,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
          "userSelect": "none",
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.04,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.17,
        },
        "h5": Object {
          "fontFamily": "Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif\\"",
          "fontSize": 24,
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.33,
          "userSelect": "none",
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "color": "#CBCBCB",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
          "userSelect": "none",
        },
        "subtitle2": Object {
          "color": "#fff",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeight": 400,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
          "userSelect": "none",
        },
        "useNextVariants": true,
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "tooltip": 1500,
      },
    }
  }
>
  <ActionButton
    color="primary"
    disabled={false}
    iconLeft={null}
    iconRight={null}
    loading={false}
    onClick={null}
    title="New Template"
    type={null}
  >
    <div
      className="makeStyles-root-3"
    >
      <div
        className="makeStyles-wrapper-7"
      >
        <WithStyles(ForwardRef(Button))
          className="makeStyles-button-1 makeStyles-button-8"
          disabled={false}
          onClick={null}
          size="small"
          type={null}
          variant="contained"
        >
          <ForwardRef(Button)
            className="makeStyles-button-1 makeStyles-button-8"
            classes={
              Object {
                "colorInherit": "MuiButton-colorInherit",
                "contained": "MuiButton-contained",
                "containedPrimary": "MuiButton-containedPrimary",
                "containedSecondary": "MuiButton-containedSecondary",
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "fullWidth": "MuiButton-fullWidth",
                "label": "MuiButton-label",
                "outlined": "MuiButton-outlined",
                "outlinedPrimary": "MuiButton-outlinedPrimary",
                "outlinedSecondary": "MuiButton-outlinedSecondary",
                "root": "MuiButton-root",
                "sizeLarge": "MuiButton-sizeLarge",
                "sizeSmall": "MuiButton-sizeSmall",
                "text": "MuiButton-text",
                "textPrimary": "MuiButton-textPrimary",
                "textSecondary": "MuiButton-textSecondary",
              }
            }
            disabled={false}
            onClick={null}
            size="small"
            type={null}
            variant="contained"
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiButton-root makeStyles-button-1 makeStyles-button-8 MuiButton-contained MuiButton-sizeSmall"
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              onClick={null}
              type={null}
            >
              <ForwardRef(ButtonBase)
                className="MuiButton-root makeStyles-button-1 makeStyles-button-8 MuiButton-contained MuiButton-sizeSmall"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                onClick={null}
                type={null}
              >
                <button
                  className="MuiButtonBase-root MuiButton-root makeStyles-button-1 makeStyles-button-8 MuiButton-contained MuiButton-sizeSmall"
                  disabled={false}
                  onBlur={[Function]}
                  onClick={null}
                  onDragLeave={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={0}
                  type={null}
                >
                  <span
                    className="MuiButton-label"
                  >
                    <span
                      className="makeStyles-titlePadding-4"
                    >
                      New Template
                    </span>
                  </span>
                  <NoSsr>
                    <WithStyles(undefined)
                      center={false}
                    >
                      <ForwardRef(TouchRipple)
                        center={false}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(undefined)>
                  </NoSsr>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(Button)>
        </WithStyles(ForwardRef(Button))>
      </div>
    </div>
  </ActionButton>
  <ActionButton
    color="secondary"
    disabled={false}
    iconLeft={null}
    iconRight={null}
    loading={false}
    onClick={null}
    title="New Template"
    type={null}
  >
    <div
      className="makeStyles-root-3"
    >
      <div
        className="makeStyles-wrapper-7"
      >
        <WithStyles(ForwardRef(Button))
          className="makeStyles-button-1 makeStyles-button-30"
          disabled={false}
          onClick={null}
          size="small"
          type={null}
          variant="contained"
        >
          <ForwardRef(Button)
            className="makeStyles-button-1 makeStyles-button-30"
            classes={
              Object {
                "colorInherit": "MuiButton-colorInherit",
                "contained": "MuiButton-contained",
                "containedPrimary": "MuiButton-containedPrimary",
                "containedSecondary": "MuiButton-containedSecondary",
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "fullWidth": "MuiButton-fullWidth",
                "label": "MuiButton-label",
                "outlined": "MuiButton-outlined",
                "outlinedPrimary": "MuiButton-outlinedPrimary",
                "outlinedSecondary": "MuiButton-outlinedSecondary",
                "root": "MuiButton-root",
                "sizeLarge": "MuiButton-sizeLarge",
                "sizeSmall": "MuiButton-sizeSmall",
                "text": "MuiButton-text",
                "textPrimary": "MuiButton-textPrimary",
                "textSecondary": "MuiButton-textSecondary",
              }
            }
            disabled={false}
            onClick={null}
            size="small"
            type={null}
            variant="contained"
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiButton-root makeStyles-button-1 makeStyles-button-30 MuiButton-contained MuiButton-sizeSmall"
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              onClick={null}
              type={null}
            >
              <ForwardRef(ButtonBase)
                className="MuiButton-root makeStyles-button-1 makeStyles-button-30 MuiButton-contained MuiButton-sizeSmall"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                onClick={null}
                type={null}
              >
                <button
                  className="MuiButtonBase-root MuiButton-root makeStyles-button-1 makeStyles-button-30 MuiButton-contained MuiButton-sizeSmall"
                  disabled={false}
                  onBlur={[Function]}
                  onClick={null}
                  onDragLeave={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={0}
                  type={null}
                >
                  <span
                    className="MuiButton-label"
                  >
                    <span
                      className="makeStyles-titlePadding-4"
                    >
                      New Template
                    </span>
                  </span>
                  <NoSsr>
                    <WithStyles(undefined)
                      center={false}
                    >
                      <ForwardRef(TouchRipple)
                        center={false}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(undefined)>
                  </NoSsr>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(Button)>
        </WithStyles(ForwardRef(Button))>
      </div>
    </div>
  </ActionButton>
</ThemeProvider>
`;

exports[`Storyshots ActionButton disabled 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "minHeight": 48,
        },
      },
      "overrides": Object {
        "MuiAvatar": Object {
          "root": Object {
            "height": 32,
            "width": 32,
          },
        },
        "MuiButton": Object {
          "contained": Object {
            "&:active": Object {
              "boxShadow": "none",
            },
            "&:disabled": Object {
              "backgroundColor": "rgba(255, 255, 255, 0.3)",
              "color": "rgba(0, 0, 0, 0.4)",
            },
          },
          "label": Object {
            "textTransform": "initial",
          },
        },
        "MuiDivider": Object {
          "root": Object {
            "backgroundColor": "#404854",
          },
        },
        "MuiDrawer": Object {
          "paper": Object {
            "backgroundColor": "#18202c",
          },
        },
        "MuiIconButton": Object {
          "root": Object {},
        },
        "MuiListItemIcon": Object {
          "root": Object {
            "& svg": Object {
              "fontSize": 20,
            },
            "color": "inherit",
            "marginRight": 0,
          },
        },
        "MuiOutlinedInput": Object {
          "root": Object {
            "& $notchedOutline": Object {
              "borderColor": "#707070",
            },
            "&$focused $notchedOutline": Object {
              "borderColor": "#707070",
            },
            "&:hover:not($disabled):not($focused):not($error) $notchedOutline": Object {
              "@media (hover: none)": Object {
                "borderColor": "#707070",
              },
              "borderColor": "#777777",
            },
            "borderWidth": 1,
            "position": "relative",
          },
        },
        "MuiSkeleton": Object {
          "root": Object {
            "backgroundColor": "rgba(255, 255, 255, 0.1)",
          },
        },
        "MuiTab": Object {
          "root": Object {
            "fontWeight": 400,
            "margin": "0 16px",
            "minWidth": 0,
            "textTransform": "initial",
          },
        },
        "MuiTabs": Object {
          "indicator": Object {
            "borderTopLeftRadius": 3,
            "borderTopRightRadius": 3,
            "height": 3,
          },
          "root": Object {},
        },
        "MuiTooltip": Object {
          "tooltip": Object {
            "backgroundColor": "rgba(0, 0, 0, 0.9)",
            "borderRadius": 4,
          },
          "tooltipPlacementBottom": Object {
            "margin": "3px 0px 0px 0px !important",
          },
        },
      },
      "palette": Object {
        "action": Object {
          "active": "rgba(0, 0, 0, 0.54)",
          "blue": Object {
            "dark": "#0038bb",
            "light": "#6c8eff",
            "main": "#1A61EF",
          },
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "green": Object {
            "dark": "#1e962d",
            "light": "#90fc8a",
            "main": "#5BC85B",
          },
          "hover": "rgba(0, 0, 0, 0.08)",
          "hoverOpacity": 0.08,
          "selected": "rgba(0, 0, 0, 0.14)",
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fafafa",
          "paper": "#525252",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "rgb(172, 68, 68)",
          "light": "rgb(247, 129, 129)",
          "main": "#F66262",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "primary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#CBCBCB",
          "light": "#63ccff",
          "main": "#16BEFD",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "rgb(63, 140, 63)",
          "light": "rgb(123, 211, 123)",
          "main": "#5BC85B",
        },
        "success": Object {
          "main": "#5BC85B",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#FFFFFF",
          "secondary": "#CBCBCB",
        },
        "tonalOffset": 0.2,
        "type": "light",
      },
      "props": Object {
        "MuiTab": Object {
          "disableRipple": true,
        },
      },
      "shadows": Array [
        "none",
        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 8,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "color": "#CBCBCB",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
          "userSelect": "none",
        },
        "body2": Object {
          "color": "#CBCBCB",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 12,
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
          "userSelect": "none",
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "color": "#fff",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 28,
          "fontWeight": 500,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
          "userSelect": "none",
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.04,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.17,
        },
        "h5": Object {
          "fontFamily": "Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif\\"",
          "fontSize": 24,
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.33,
          "userSelect": "none",
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "color": "#CBCBCB",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
          "userSelect": "none",
        },
        "subtitle2": Object {
          "color": "#fff",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeight": 400,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
          "userSelect": "none",
        },
        "useNextVariants": true,
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "tooltip": 1500,
      },
    }
  }
>
  <ActionButton
    color="primary"
    disabled={true}
    iconLeft={<Memo />}
    iconRight={null}
    loading={false}
    onClick={null}
    title="New Template"
    type={null}
  >
    <div
      className="makeStyles-root-94"
    >
      <div
        className="makeStyles-wrapper-98"
      >
        <WithStyles(ForwardRef(Button))
          className="makeStyles-button-92 makeStyles-button-99"
          disabled={true}
          onClick={null}
          size="small"
          type={null}
          variant="contained"
        >
          <ForwardRef(Button)
            className="makeStyles-button-92 makeStyles-button-99"
            classes={
              Object {
                "colorInherit": "MuiButton-colorInherit",
                "contained": "MuiButton-contained",
                "containedPrimary": "MuiButton-containedPrimary",
                "containedSecondary": "MuiButton-containedSecondary",
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "fullWidth": "MuiButton-fullWidth",
                "label": "MuiButton-label",
                "outlined": "MuiButton-outlined",
                "outlinedPrimary": "MuiButton-outlinedPrimary",
                "outlinedSecondary": "MuiButton-outlinedSecondary",
                "root": "MuiButton-root",
                "sizeLarge": "MuiButton-sizeLarge",
                "sizeSmall": "MuiButton-sizeSmall",
                "text": "MuiButton-text",
                "textPrimary": "MuiButton-textPrimary",
                "textSecondary": "MuiButton-textSecondary",
              }
            }
            disabled={true}
            onClick={null}
            size="small"
            type={null}
            variant="contained"
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiButton-root makeStyles-button-92 makeStyles-button-99 MuiButton-contained MuiButton-sizeSmall Mui-disabled"
              component="button"
              disabled={true}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              onClick={null}
              type={null}
            >
              <ForwardRef(ButtonBase)
                className="MuiButton-root makeStyles-button-92 makeStyles-button-99 MuiButton-contained MuiButton-sizeSmall Mui-disabled"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                component="button"
                disabled={true}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                onClick={null}
                type={null}
              >
                <button
                  className="MuiButtonBase-root MuiButton-root makeStyles-button-92 makeStyles-button-99 MuiButton-contained MuiButton-sizeSmall Mui-disabled Mui-disabled"
                  disabled={true}
                  onBlur={[Function]}
                  onClick={null}
                  onDragLeave={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={-1}
                  type={null}
                >
                  <span
                    className="MuiButton-label"
                  >
                    <ForwardRef>
                      <WithStyles(ForwardRef(SvgIcon))>
                        <ForwardRef(SvgIcon)
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction",
                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                              "colorError": "MuiSvgIcon-colorError",
                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                              "root": "MuiSvgIcon-root",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </WithStyles(ForwardRef(SvgIcon))>
                    </ForwardRef>
                    <span
                      className="makeStyles-titlePaddingLeft-96"
                    >
                      New Template
                    </span>
                  </span>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(Button)>
        </WithStyles(ForwardRef(Button))>
      </div>
    </div>
  </ActionButton>
  <ActionButton
    color="primary"
    disabled={true}
    iconLeft={null}
    iconRight={null}
    loading={false}
    onClick={null}
    title="New Template"
    type={null}
  >
    <div
      className="makeStyles-root-94"
    >
      <div
        className="makeStyles-wrapper-98"
      >
        <WithStyles(ForwardRef(Button))
          className="makeStyles-button-92 makeStyles-button-130"
          disabled={true}
          onClick={null}
          size="small"
          type={null}
          variant="contained"
        >
          <ForwardRef(Button)
            className="makeStyles-button-92 makeStyles-button-130"
            classes={
              Object {
                "colorInherit": "MuiButton-colorInherit",
                "contained": "MuiButton-contained",
                "containedPrimary": "MuiButton-containedPrimary",
                "containedSecondary": "MuiButton-containedSecondary",
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "fullWidth": "MuiButton-fullWidth",
                "label": "MuiButton-label",
                "outlined": "MuiButton-outlined",
                "outlinedPrimary": "MuiButton-outlinedPrimary",
                "outlinedSecondary": "MuiButton-outlinedSecondary",
                "root": "MuiButton-root",
                "sizeLarge": "MuiButton-sizeLarge",
                "sizeSmall": "MuiButton-sizeSmall",
                "text": "MuiButton-text",
                "textPrimary": "MuiButton-textPrimary",
                "textSecondary": "MuiButton-textSecondary",
              }
            }
            disabled={true}
            onClick={null}
            size="small"
            type={null}
            variant="contained"
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiButton-root makeStyles-button-92 makeStyles-button-130 MuiButton-contained MuiButton-sizeSmall Mui-disabled"
              component="button"
              disabled={true}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              onClick={null}
              type={null}
            >
              <ForwardRef(ButtonBase)
                className="MuiButton-root makeStyles-button-92 makeStyles-button-130 MuiButton-contained MuiButton-sizeSmall Mui-disabled"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                component="button"
                disabled={true}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                onClick={null}
                type={null}
              >
                <button
                  className="MuiButtonBase-root MuiButton-root makeStyles-button-92 makeStyles-button-130 MuiButton-contained MuiButton-sizeSmall Mui-disabled Mui-disabled"
                  disabled={true}
                  onBlur={[Function]}
                  onClick={null}
                  onDragLeave={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={-1}
                  type={null}
                >
                  <span
                    className="MuiButton-label"
                  >
                    <span
                      className="makeStyles-titlePadding-95"
                    >
                      New Template
                    </span>
                  </span>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(Button)>
        </WithStyles(ForwardRef(Button))>
      </div>
    </div>
  </ActionButton>
</ThemeProvider>
`;

exports[`Storyshots ActionButton icons 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "minHeight": 48,
        },
      },
      "overrides": Object {
        "MuiAvatar": Object {
          "root": Object {
            "height": 32,
            "width": 32,
          },
        },
        "MuiButton": Object {
          "contained": Object {
            "&:active": Object {
              "boxShadow": "none",
            },
            "&:disabled": Object {
              "backgroundColor": "rgba(255, 255, 255, 0.3)",
              "color": "rgba(0, 0, 0, 0.4)",
            },
          },
          "label": Object {
            "textTransform": "initial",
          },
        },
        "MuiDivider": Object {
          "root": Object {
            "backgroundColor": "#404854",
          },
        },
        "MuiDrawer": Object {
          "paper": Object {
            "backgroundColor": "#18202c",
          },
        },
        "MuiIconButton": Object {
          "root": Object {},
        },
        "MuiListItemIcon": Object {
          "root": Object {
            "& svg": Object {
              "fontSize": 20,
            },
            "color": "inherit",
            "marginRight": 0,
          },
        },
        "MuiOutlinedInput": Object {
          "root": Object {
            "& $notchedOutline": Object {
              "borderColor": "#707070",
            },
            "&$focused $notchedOutline": Object {
              "borderColor": "#707070",
            },
            "&:hover:not($disabled):not($focused):not($error) $notchedOutline": Object {
              "@media (hover: none)": Object {
                "borderColor": "#707070",
              },
              "borderColor": "#777777",
            },
            "borderWidth": 1,
            "position": "relative",
          },
        },
        "MuiSkeleton": Object {
          "root": Object {
            "backgroundColor": "rgba(255, 255, 255, 0.1)",
          },
        },
        "MuiTab": Object {
          "root": Object {
            "fontWeight": 400,
            "margin": "0 16px",
            "minWidth": 0,
            "textTransform": "initial",
          },
        },
        "MuiTabs": Object {
          "indicator": Object {
            "borderTopLeftRadius": 3,
            "borderTopRightRadius": 3,
            "height": 3,
          },
          "root": Object {},
        },
        "MuiTooltip": Object {
          "tooltip": Object {
            "backgroundColor": "rgba(0, 0, 0, 0.9)",
            "borderRadius": 4,
          },
          "tooltipPlacementBottom": Object {
            "margin": "3px 0px 0px 0px !important",
          },
        },
      },
      "palette": Object {
        "action": Object {
          "active": "rgba(0, 0, 0, 0.54)",
          "blue": Object {
            "dark": "#0038bb",
            "light": "#6c8eff",
            "main": "#1A61EF",
          },
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "green": Object {
            "dark": "#1e962d",
            "light": "#90fc8a",
            "main": "#5BC85B",
          },
          "hover": "rgba(0, 0, 0, 0.08)",
          "hoverOpacity": 0.08,
          "selected": "rgba(0, 0, 0, 0.14)",
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fafafa",
          "paper": "#525252",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "rgb(172, 68, 68)",
          "light": "rgb(247, 129, 129)",
          "main": "#F66262",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "primary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#CBCBCB",
          "light": "#63ccff",
          "main": "#16BEFD",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "rgb(63, 140, 63)",
          "light": "rgb(123, 211, 123)",
          "main": "#5BC85B",
        },
        "success": Object {
          "main": "#5BC85B",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#FFFFFF",
          "secondary": "#CBCBCB",
        },
        "tonalOffset": 0.2,
        "type": "light",
      },
      "props": Object {
        "MuiTab": Object {
          "disableRipple": true,
        },
      },
      "shadows": Array [
        "none",
        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 8,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "color": "#CBCBCB",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
          "userSelect": "none",
        },
        "body2": Object {
          "color": "#CBCBCB",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 12,
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
          "userSelect": "none",
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "color": "#fff",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 28,
          "fontWeight": 500,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
          "userSelect": "none",
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.04,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.17,
        },
        "h5": Object {
          "fontFamily": "Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif\\"",
          "fontSize": 24,
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.33,
          "userSelect": "none",
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "color": "#CBCBCB",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
          "userSelect": "none",
        },
        "subtitle2": Object {
          "color": "#fff",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeight": 400,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
          "userSelect": "none",
        },
        "useNextVariants": true,
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "tooltip": 1500,
      },
    }
  }
>
  <ActionButton
    color="primary"
    disabled={false}
    iconLeft={<Memo />}
    iconRight={null}
    loading={false}
    onClick={null}
    title="New Template"
    type={null}
  >
    <div
      className="makeStyles-root-44"
    >
      <div
        className="makeStyles-wrapper-48"
      >
        <WithStyles(ForwardRef(Button))
          className="makeStyles-button-42 makeStyles-button-49"
          disabled={false}
          onClick={null}
          size="small"
          type={null}
          variant="contained"
        >
          <ForwardRef(Button)
            className="makeStyles-button-42 makeStyles-button-49"
            classes={
              Object {
                "colorInherit": "MuiButton-colorInherit",
                "contained": "MuiButton-contained",
                "containedPrimary": "MuiButton-containedPrimary",
                "containedSecondary": "MuiButton-containedSecondary",
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "fullWidth": "MuiButton-fullWidth",
                "label": "MuiButton-label",
                "outlined": "MuiButton-outlined",
                "outlinedPrimary": "MuiButton-outlinedPrimary",
                "outlinedSecondary": "MuiButton-outlinedSecondary",
                "root": "MuiButton-root",
                "sizeLarge": "MuiButton-sizeLarge",
                "sizeSmall": "MuiButton-sizeSmall",
                "text": "MuiButton-text",
                "textPrimary": "MuiButton-textPrimary",
                "textSecondary": "MuiButton-textSecondary",
              }
            }
            disabled={false}
            onClick={null}
            size="small"
            type={null}
            variant="contained"
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiButton-root makeStyles-button-42 makeStyles-button-49 MuiButton-contained MuiButton-sizeSmall"
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              onClick={null}
              type={null}
            >
              <ForwardRef(ButtonBase)
                className="MuiButton-root makeStyles-button-42 makeStyles-button-49 MuiButton-contained MuiButton-sizeSmall"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                onClick={null}
                type={null}
              >
                <button
                  className="MuiButtonBase-root MuiButton-root makeStyles-button-42 makeStyles-button-49 MuiButton-contained MuiButton-sizeSmall"
                  disabled={false}
                  onBlur={[Function]}
                  onClick={null}
                  onDragLeave={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={0}
                  type={null}
                >
                  <span
                    className="MuiButton-label"
                  >
                    <ForwardRef>
                      <WithStyles(ForwardRef(SvgIcon))>
                        <ForwardRef(SvgIcon)
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction",
                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                              "colorError": "MuiSvgIcon-colorError",
                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                              "root": "MuiSvgIcon-root",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </WithStyles(ForwardRef(SvgIcon))>
                    </ForwardRef>
                    <span
                      className="makeStyles-titlePaddingLeft-46"
                    >
                      New Template
                    </span>
                  </span>
                  <NoSsr>
                    <WithStyles(undefined)
                      center={false}
                    >
                      <ForwardRef(TouchRipple)
                        center={false}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(undefined)>
                  </NoSsr>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(Button)>
        </WithStyles(ForwardRef(Button))>
      </div>
    </div>
  </ActionButton>
  <ActionButton
    color="secondary"
    disabled={false}
    iconLeft={null}
    iconRight={<Memo />}
    loading={false}
    onClick={null}
    title="New Template"
    type={null}
  >
    <div
      className="makeStyles-root-44"
    >
      <div
        className="makeStyles-wrapper-48"
      >
        <WithStyles(ForwardRef(Button))
          className="makeStyles-button-42 makeStyles-button-80"
          disabled={false}
          onClick={null}
          size="small"
          type={null}
          variant="contained"
        >
          <ForwardRef(Button)
            className="makeStyles-button-42 makeStyles-button-80"
            classes={
              Object {
                "colorInherit": "MuiButton-colorInherit",
                "contained": "MuiButton-contained",
                "containedPrimary": "MuiButton-containedPrimary",
                "containedSecondary": "MuiButton-containedSecondary",
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "fullWidth": "MuiButton-fullWidth",
                "label": "MuiButton-label",
                "outlined": "MuiButton-outlined",
                "outlinedPrimary": "MuiButton-outlinedPrimary",
                "outlinedSecondary": "MuiButton-outlinedSecondary",
                "root": "MuiButton-root",
                "sizeLarge": "MuiButton-sizeLarge",
                "sizeSmall": "MuiButton-sizeSmall",
                "text": "MuiButton-text",
                "textPrimary": "MuiButton-textPrimary",
                "textSecondary": "MuiButton-textSecondary",
              }
            }
            disabled={false}
            onClick={null}
            size="small"
            type={null}
            variant="contained"
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiButton-root makeStyles-button-42 makeStyles-button-80 MuiButton-contained MuiButton-sizeSmall"
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              onClick={null}
              type={null}
            >
              <ForwardRef(ButtonBase)
                className="MuiButton-root makeStyles-button-42 makeStyles-button-80 MuiButton-contained MuiButton-sizeSmall"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                onClick={null}
                type={null}
              >
                <button
                  className="MuiButtonBase-root MuiButton-root makeStyles-button-42 makeStyles-button-80 MuiButton-contained MuiButton-sizeSmall"
                  disabled={false}
                  onBlur={[Function]}
                  onClick={null}
                  onDragLeave={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={0}
                  type={null}
                >
                  <span
                    className="MuiButton-label"
                  >
                    <span
                      className="makeStyles-titlePaddingRight-47"
                    >
                      New Template
                    </span>
                    <ForwardRef>
                      <WithStyles(ForwardRef(SvgIcon))>
                        <ForwardRef(SvgIcon)
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction",
                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                              "colorError": "MuiSvgIcon-colorError",
                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                              "root": "MuiSvgIcon-root",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </WithStyles(ForwardRef(SvgIcon))>
                    </ForwardRef>
                  </span>
                  <NoSsr>
                    <WithStyles(undefined)
                      center={false}
                    >
                      <ForwardRef(TouchRipple)
                        center={false}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(undefined)>
                  </NoSsr>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(Button)>
        </WithStyles(ForwardRef(Button))>
      </div>
    </div>
  </ActionButton>
</ThemeProvider>
`;

exports[`Storyshots ActionButton loading 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "minHeight": 48,
        },
      },
      "overrides": Object {
        "MuiAvatar": Object {
          "root": Object {
            "height": 32,
            "width": 32,
          },
        },
        "MuiButton": Object {
          "contained": Object {
            "&:active": Object {
              "boxShadow": "none",
            },
            "&:disabled": Object {
              "backgroundColor": "rgba(255, 255, 255, 0.3)",
              "color": "rgba(0, 0, 0, 0.4)",
            },
          },
          "label": Object {
            "textTransform": "initial",
          },
        },
        "MuiDivider": Object {
          "root": Object {
            "backgroundColor": "#404854",
          },
        },
        "MuiDrawer": Object {
          "paper": Object {
            "backgroundColor": "#18202c",
          },
        },
        "MuiIconButton": Object {
          "root": Object {},
        },
        "MuiListItemIcon": Object {
          "root": Object {
            "& svg": Object {
              "fontSize": 20,
            },
            "color": "inherit",
            "marginRight": 0,
          },
        },
        "MuiOutlinedInput": Object {
          "root": Object {
            "& $notchedOutline": Object {
              "borderColor": "#707070",
            },
            "&$focused $notchedOutline": Object {
              "borderColor": "#707070",
            },
            "&:hover:not($disabled):not($focused):not($error) $notchedOutline": Object {
              "@media (hover: none)": Object {
                "borderColor": "#707070",
              },
              "borderColor": "#777777",
            },
            "borderWidth": 1,
            "position": "relative",
          },
        },
        "MuiSkeleton": Object {
          "root": Object {
            "backgroundColor": "rgba(255, 255, 255, 0.1)",
          },
        },
        "MuiTab": Object {
          "root": Object {
            "fontWeight": 400,
            "margin": "0 16px",
            "minWidth": 0,
            "textTransform": "initial",
          },
        },
        "MuiTabs": Object {
          "indicator": Object {
            "borderTopLeftRadius": 3,
            "borderTopRightRadius": 3,
            "height": 3,
          },
          "root": Object {},
        },
        "MuiTooltip": Object {
          "tooltip": Object {
            "backgroundColor": "rgba(0, 0, 0, 0.9)",
            "borderRadius": 4,
          },
          "tooltipPlacementBottom": Object {
            "margin": "3px 0px 0px 0px !important",
          },
        },
      },
      "palette": Object {
        "action": Object {
          "active": "rgba(0, 0, 0, 0.54)",
          "blue": Object {
            "dark": "#0038bb",
            "light": "#6c8eff",
            "main": "#1A61EF",
          },
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "green": Object {
            "dark": "#1e962d",
            "light": "#90fc8a",
            "main": "#5BC85B",
          },
          "hover": "rgba(0, 0, 0, 0.08)",
          "hoverOpacity": 0.08,
          "selected": "rgba(0, 0, 0, 0.14)",
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fafafa",
          "paper": "#525252",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "rgb(172, 68, 68)",
          "light": "rgb(247, 129, 129)",
          "main": "#F66262",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "primary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#CBCBCB",
          "light": "#63ccff",
          "main": "#16BEFD",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "rgb(63, 140, 63)",
          "light": "rgb(123, 211, 123)",
          "main": "#5BC85B",
        },
        "success": Object {
          "main": "#5BC85B",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#FFFFFF",
          "secondary": "#CBCBCB",
        },
        "tonalOffset": 0.2,
        "type": "light",
      },
      "props": Object {
        "MuiTab": Object {
          "disableRipple": true,
        },
      },
      "shadows": Array [
        "none",
        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 8,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "color": "#CBCBCB",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
          "userSelect": "none",
        },
        "body2": Object {
          "color": "#CBCBCB",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 12,
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
          "userSelect": "none",
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "color": "#fff",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 28,
          "fontWeight": 500,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
          "userSelect": "none",
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.04,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.17,
        },
        "h5": Object {
          "fontFamily": "Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif\\"",
          "fontSize": 24,
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.33,
          "userSelect": "none",
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "color": "#CBCBCB",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
          "userSelect": "none",
        },
        "subtitle2": Object {
          "color": "#fff",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeight": 400,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
          "userSelect": "none",
        },
        "useNextVariants": true,
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "tooltip": 1500,
      },
    }
  }
>
  <ActionButton
    color="primary"
    disabled={false}
    iconLeft={<Memo />}
    iconRight={null}
    loading={true}
    onClick={null}
    title="New Template"
    type={null}
  >
    <div
      className="makeStyles-root-134"
    >
      <div
        className="makeStyles-wrapper-138"
      >
        <WithStyles(ForwardRef(Button))
          className="makeStyles-button-132 makeStyles-button-139"
          disabled={true}
          onClick={null}
          size="small"
          type={null}
          variant="contained"
        >
          <ForwardRef(Button)
            className="makeStyles-button-132 makeStyles-button-139"
            classes={
              Object {
                "colorInherit": "MuiButton-colorInherit",
                "contained": "MuiButton-contained",
                "containedPrimary": "MuiButton-containedPrimary",
                "containedSecondary": "MuiButton-containedSecondary",
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "fullWidth": "MuiButton-fullWidth",
                "label": "MuiButton-label",
                "outlined": "MuiButton-outlined",
                "outlinedPrimary": "MuiButton-outlinedPrimary",
                "outlinedSecondary": "MuiButton-outlinedSecondary",
                "root": "MuiButton-root",
                "sizeLarge": "MuiButton-sizeLarge",
                "sizeSmall": "MuiButton-sizeSmall",
                "text": "MuiButton-text",
                "textPrimary": "MuiButton-textPrimary",
                "textSecondary": "MuiButton-textSecondary",
              }
            }
            disabled={true}
            onClick={null}
            size="small"
            type={null}
            variant="contained"
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiButton-root makeStyles-button-132 makeStyles-button-139 MuiButton-contained MuiButton-sizeSmall Mui-disabled"
              component="button"
              disabled={true}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              onClick={null}
              type={null}
            >
              <ForwardRef(ButtonBase)
                className="MuiButton-root makeStyles-button-132 makeStyles-button-139 MuiButton-contained MuiButton-sizeSmall Mui-disabled"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                component="button"
                disabled={true}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                onClick={null}
                type={null}
              >
                <button
                  className="MuiButtonBase-root MuiButton-root makeStyles-button-132 makeStyles-button-139 MuiButton-contained MuiButton-sizeSmall Mui-disabled Mui-disabled"
                  disabled={true}
                  onBlur={[Function]}
                  onClick={null}
                  onDragLeave={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={-1}
                  type={null}
                >
                  <span
                    className="MuiButton-label"
                  >
                    <ForwardRef>
                      <WithStyles(ForwardRef(SvgIcon))>
                        <ForwardRef(SvgIcon)
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction",
                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                              "colorError": "MuiSvgIcon-colorError",
                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                              "root": "MuiSvgIcon-root",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </WithStyles(ForwardRef(SvgIcon))>
                    </ForwardRef>
                    <span
                      className="makeStyles-titlePaddingLeft-136"
                    >
                      New Template
                    </span>
                  </span>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(Button)>
        </WithStyles(ForwardRef(Button))>
        <WithStyles(ForwardRef(CircularProgress))
          className="makeStyles-buttonProgress-133 makeStyles-buttonProgress-140"
          size={24}
          thickness={5}
        >
          <ForwardRef(CircularProgress)
            className="makeStyles-buttonProgress-133 makeStyles-buttonProgress-140"
            classes={
              Object {
                "circle": "MuiCircularProgress-circle",
                "circleDisableShrink": "MuiCircularProgress-circleDisableShrink",
                "circleIndeterminate": "MuiCircularProgress-circleIndeterminate",
                "circleStatic": "MuiCircularProgress-circleStatic",
                "colorPrimary": "MuiCircularProgress-colorPrimary",
                "colorSecondary": "MuiCircularProgress-colorSecondary",
                "indeterminate": "MuiCircularProgress-indeterminate",
                "root": "MuiCircularProgress-root",
                "static": "MuiCircularProgress-static",
                "svg": "MuiCircularProgress-svg",
              }
            }
            size={24}
            thickness={5}
          >
            <div
              className="MuiCircularProgress-root makeStyles-buttonProgress-133 makeStyles-buttonProgress-140 MuiCircularProgress-colorPrimary MuiCircularProgress-indeterminate"
              role="progressbar"
              style={
                Object {
                  "height": 24,
                  "width": 24,
                }
              }
            >
              <svg
                className="MuiCircularProgress-svg"
                viewBox="22 22 44 44"
              >
                <circle
                  className="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                  cx={44}
                  cy={44}
                  fill="none"
                  r={19.5}
                  strokeWidth={5}
                  style={Object {}}
                />
              </svg>
            </div>
          </ForwardRef(CircularProgress)>
        </WithStyles(ForwardRef(CircularProgress))>
      </div>
    </div>
  </ActionButton>
  <ActionButton
    color="secondary"
    disabled={false}
    iconLeft={null}
    iconRight={null}
    loading={true}
    onClick={null}
    title="New Template"
    type={null}
  >
    <div
      className="makeStyles-root-134"
    >
      <div
        className="makeStyles-wrapper-138"
      >
        <WithStyles(ForwardRef(Button))
          className="makeStyles-button-132 makeStyles-button-182"
          disabled={true}
          onClick={null}
          size="small"
          type={null}
          variant="contained"
        >
          <ForwardRef(Button)
            className="makeStyles-button-132 makeStyles-button-182"
            classes={
              Object {
                "colorInherit": "MuiButton-colorInherit",
                "contained": "MuiButton-contained",
                "containedPrimary": "MuiButton-containedPrimary",
                "containedSecondary": "MuiButton-containedSecondary",
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "fullWidth": "MuiButton-fullWidth",
                "label": "MuiButton-label",
                "outlined": "MuiButton-outlined",
                "outlinedPrimary": "MuiButton-outlinedPrimary",
                "outlinedSecondary": "MuiButton-outlinedSecondary",
                "root": "MuiButton-root",
                "sizeLarge": "MuiButton-sizeLarge",
                "sizeSmall": "MuiButton-sizeSmall",
                "text": "MuiButton-text",
                "textPrimary": "MuiButton-textPrimary",
                "textSecondary": "MuiButton-textSecondary",
              }
            }
            disabled={true}
            onClick={null}
            size="small"
            type={null}
            variant="contained"
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiButton-root makeStyles-button-132 makeStyles-button-182 MuiButton-contained MuiButton-sizeSmall Mui-disabled"
              component="button"
              disabled={true}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              onClick={null}
              type={null}
            >
              <ForwardRef(ButtonBase)
                className="MuiButton-root makeStyles-button-132 makeStyles-button-182 MuiButton-contained MuiButton-sizeSmall Mui-disabled"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                component="button"
                disabled={true}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                onClick={null}
                type={null}
              >
                <button
                  className="MuiButtonBase-root MuiButton-root makeStyles-button-132 makeStyles-button-182 MuiButton-contained MuiButton-sizeSmall Mui-disabled Mui-disabled"
                  disabled={true}
                  onBlur={[Function]}
                  onClick={null}
                  onDragLeave={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={-1}
                  type={null}
                >
                  <span
                    className="MuiButton-label"
                  >
                    <span
                      className="makeStyles-titlePadding-135"
                    >
                      New Template
                    </span>
                  </span>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(Button)>
        </WithStyles(ForwardRef(Button))>
        <WithStyles(ForwardRef(CircularProgress))
          className="makeStyles-buttonProgress-133 makeStyles-buttonProgress-183"
          size={24}
          thickness={5}
        >
          <ForwardRef(CircularProgress)
            className="makeStyles-buttonProgress-133 makeStyles-buttonProgress-183"
            classes={
              Object {
                "circle": "MuiCircularProgress-circle",
                "circleDisableShrink": "MuiCircularProgress-circleDisableShrink",
                "circleIndeterminate": "MuiCircularProgress-circleIndeterminate",
                "circleStatic": "MuiCircularProgress-circleStatic",
                "colorPrimary": "MuiCircularProgress-colorPrimary",
                "colorSecondary": "MuiCircularProgress-colorSecondary",
                "indeterminate": "MuiCircularProgress-indeterminate",
                "root": "MuiCircularProgress-root",
                "static": "MuiCircularProgress-static",
                "svg": "MuiCircularProgress-svg",
              }
            }
            size={24}
            thickness={5}
          >
            <div
              className="MuiCircularProgress-root makeStyles-buttonProgress-133 makeStyles-buttonProgress-183 MuiCircularProgress-colorPrimary MuiCircularProgress-indeterminate"
              role="progressbar"
              style={
                Object {
                  "height": 24,
                  "width": 24,
                }
              }
            >
              <svg
                className="MuiCircularProgress-svg"
                viewBox="22 22 44 44"
              >
                <circle
                  className="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                  cx={44}
                  cy={44}
                  fill="none"
                  r={19.5}
                  strokeWidth={5}
                  style={Object {}}
                />
              </svg>
            </div>
          </ForwardRef(CircularProgress)>
        </WithStyles(ForwardRef(CircularProgress))>
      </div>
    </div>
  </ActionButton>
</ThemeProvider>
`;
